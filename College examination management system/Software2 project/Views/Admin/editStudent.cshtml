@model Software2_project.ViewModel.StudentCourseViewModel
@{
    ViewBag.Title = "editStudent";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h2 id="Pagetitle" style="text-align:center; font-weight:bold; margin-right:auto; margin-left:auto">
    <span style="border-bottom:1.5px solid;">Update Student</span>
</h2>

@using (Html.BeginForm("updateStudent", "Admin"))
{
    <div class="form-group" style="font-weight: bold; margin-top: 20px">
        @Html.LabelFor(m => m.student.name)
        @Html.TextBoxFor(m => m.student.name, new { @class = "form-control", placeholder = "Enter Student Name" })
        @Html.ValidationMessageFor(m => m.student.name)
    </div>

    <div class="form-group" style="font-weight:bold">
        @Html.LabelFor(m => m.student.username)
        @Html.TextBoxFor(m => m.student.username, new { @class = "form-control", placeholder = "Enter Student Username" })
        @Html.ValidationMessageFor(m => m.student.username)
    </div>

    <div class="form-group" style="font-weight:bold">
        @Html.LabelFor(m => m.student.age)
        @Html.TextBoxFor(m => m.student.age, new { @class = "form-control", placeholder = "Enter Student Age" })
        @Html.ValidationMessageFor(m => m.student.age)
    </div>

    <div class="form-group" style="font-weight:bold">
        @Html.LabelFor(m => m.student.e_mail)
        @Html.TextBoxFor(m => m.student.e_mail, new { @class = "form-control", placeholder = "Enter Student E-mail" })
        @Html.ValidationMessageFor(m => m.student.e_mail)
    </div>

    <div class="form-group" style="font-weight:bold">
        @Html.LabelFor(m => m.student.address)
        @Html.TextBoxFor(m => m.student.address, new { @class = "form-control", placeholder = "Enter Student Address" })
        @Html.ValidationMessageFor(m => m.student.address)
    </div>

    <div class="form-group" style="font-weight:bold">
        @Html.LabelFor(m => m.student.phone)
        @Html.TextBoxFor(m => m.student.phone, new { @class = "form-control", placeholder = "Enter Student Phone" })
        @Html.ValidationMessageFor(m => m.student.phone)
    </div>

    <div class="form-group" style="font-weight:bold">
        @Html.LabelFor(m => m.student.gender)
        @Html.DropDownListFor(m => m.student.gender, new List<SelectListItem>
        {
            new SelectListItem{Text="Male", Value="male"},
            new SelectListItem{Text="Female", Value="female"},
        }, "Select Gender", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.student.gender)
    </div>

    @Html.HiddenFor(m => m.student.id)
    <fieldset style="border:1.5px solid rgba(230, 115, 0, 1); border-radius:25px; padding:10px;">
        <legend style="color:rgb(230, 115, 0); font-weight:bold">Courses</legend>
        <div class="grid" style="font-weight:bold">
            @for (int i = 0; i < Model.courses.Count; i++)
            {
                if (Model.checkedCourses.Contains(Model.courses[i]))
                {
                    Model.courses[i].IsChecked = true;
                }

                <label class="checkbox-inline">
                    @Html.CheckBoxFor(m => Model.courses[i].IsChecked)
                    @Model.courses[i].name
                    @Html.HiddenFor(m => m.courses[i].id)
                    @Html.HiddenFor(m => m.courses[i].code)
                    @Html.HiddenFor(m => m.courses[i].name)
                </label>
            }
        </div>
    </fieldset>

    <button type="submit" class="btn btn-primary" style="border-radius:10px;margin-top:10px">Save New Data</button>
}

<style>
    .grid {
        width: 100%;
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-gap: 25px
    }
</style>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>